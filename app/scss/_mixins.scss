// @include borderRadius(4px)

@mixin borderRadius($radius: $default-border-radius) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

// @include textFormat(times, 12px, black)
@mixin textFormat($family, $size, $color) {
    font: {
        size: $size;
        family: $family;
        color: $color;
    };
}

// @include centerer
@mixin centerer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// include center-element
@mixin center-element {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// @include position(absolute, T,R,B,L)
@mixin position($type, $top: null, $right: null, $bottom: null, $left: null) {
    position: $type;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

// @include opacity()
@mixin opacity($opacity) {
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  opacity: $opacity;
  -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity * 100})";
  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=#{$opacity * 100});
  filter:alpha(opacity=#{$opacity * 100});
}


/*
 * Apply a CSS3 transition
 * https://raw.githubusercontent.com/thesedays/scss-mixins/master/css3-transitions.scss
 * $property The property you want to animate, eg opacity
 * $duration The duration of the animation, eg 1s
 * $ms Include -ms-transition; default is false because IE does not support transitionEnd callback
 *
 * @include transition(opacity, 0.5s);
 */

@mixin transition($property, $duration, $ms: false) {
  -webkit-transition: $property $duration ease-in-out;
  -moz-transition: $property $duration ease-in-out;
  -o-transition: $property $duration ease-in-out;
  @if ($ms) {
    -ms-transition: $property $duration ease-in-out;
  }
  transition: $property $duration ease-in-out;
}

@mixin transitionLong($property, $duration, $easing:ease-in-out, $delay:false) {
  @include transitionProperty($property);
  @include transitionDuration($duration);

  @if($delay) {
    @include transitionDelay($delay);
  }

  @if($easing) {
    @include transitionTimingFunction($easing);
  }
}

/*
 * Apply a CSS3 transition-delay
 * @include transitionDelay(2s);
 */
@mixin transitionDelay($delay) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  -ms-transition-delay: $delay;
  transition-delay: $delay;
}

/*
 * Apply a CSS3 transition-duration
 * @include transitionDuration(1s);
 */
@mixin transitionDuration($duration) {
  -webkit-transition-duration: $duration;
  -moz-transition-duration: $duration;
  -o-transition-duration: $duration;
  -ms-transition-duration: $duration;
  transition-duration: $duration;
}

/*
 * Apply a CSS3 transition-property
 * @include transitionProperty(opacity);
 * @include transitionProperty((height, width)); Multiple properties can be passed in surrounded by brackets
 */
@mixin transitionProperty($property) {
  -webkit-transition-property: $property;
  -moz-transition-property: $property;
  -o-transition-property: $property;
  -ms-transition-property: $property;
  transition-property: $property;
}

/*
 * Apply a CSS3 transition-timing-function
 * @include transitionTimingFunction(easing);
 */
@mixin transitionTimingFunction($easing) {
  -webkit-transition-timing-function: $easing;
  -moz-transition-timing-function: $easing;
  -o-transition-timing-function: $easing;
  -ms-transition-timing-function: $easing;
  transition-timing-function: $easing;
}
